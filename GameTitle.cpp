#include <iostream>
#include <iomanip>
using namespace std;
/*THE LOGIC BOARD AND THE PRINTING BOARD CURRENTLY DON'T COMMUNICATE,
  YOU MAY FIX THIS ON YOUR OWN AHEAD OF PRACTICING WITH AI. OTHERWISE, USE THE BOARDPRINT ARRAYS TO HANDLE AI STUFF
  FOR NOW. IF YOU HAVE QUESTIONS, PING ME IN THE DISCORD SERVER
*/
void boardPrinter(int board1[12][12], int board2[12][12]) {
	for (int row = 0; row < 12; row++) {
		for (int col = 0; col < 12; col++) {
			if (board1[row][col] == 1) cout << char(219) << char(219) << char(219);
			if (board1[row][col] == 0) cout << char(197) << char(197) << char(197);
			//cout << boardPrint[row][col];
		}
		cout << "     ";
		for (int col = 0; col < 12; col++) {
			if (board2[row][col] == 1) cout << char(219) << char(219) << char(219);
			if (board2[row][col] == 0) cout << char(197) << char(197) << char(197);
			//cout << boardPrint[row][col];
		}
		cout << endl;
	}
}

int main() 
{
	int boardLogicP1[12][12] =
	{
		{1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1}

	};
	//IGNORE THIS FOR NOW
	string boardPrintTEST[12][12] =
	{
		{"1"," A "," B ","C","D","E","F","G","H","I","J","1"},
		{" 1 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 2 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 3 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 4 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 5 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 6 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 7 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 8 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 9 ","0","0","0","0","0","0","0","0","0","0","1"},
		{" 10","0","0","0","0","0","0","0","0","0","0","1"},
		{"1","1","1","1","1","1","1","1","1","1","1","1"},
	};
	int boardPrintP1[12][12] =
	{
		{1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1}
	};
	int boardPrintP2[12][12] =
	{
		{1,1,1,1,1,1,1,1,1,1,1,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,0,0,0,0,0,0,0,0,0,0,1},
		{1,1,1,1,1,1,1,1,1,1,1,1}
	};
	bool win = false;
	while (!win) {
		boardPrinter(boardPrintP1, boardPrintP2);
		win = true;
	}
	return 0;
}